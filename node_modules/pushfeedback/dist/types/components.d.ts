/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "./stencil-public-runtime";
export namespace Components {
    interface FeedbackButton {
        "buttonPosition": string;
        "buttonStyle": string;
        "customFont": boolean;
        "emailAddress": string;
        "emailPlaceholder": string;
        "errorMessage": string;
        "errorMessage403": string;
        "errorMessage404": string;
        "fetchData": boolean;
        "hideEmail": boolean;
        "hideIcon": boolean;
        "hidePrivacyPolicy": boolean;
        "hideRating": boolean;
        "hideScreenshotButton": boolean;
        "messagePlaceholder": string;
        "modalPosition": string;
        "modalTitle": string;
        "modalTitleError": string;
        "modalTitleSuccess": string;
        "privacyPolicyText": string;
        "project": string;
        "ratingMode": string;
        "ratingPlaceholder": string;
        "ratingStarsPlaceholder": string;
        "screenshotButtonText": string;
        "screenshotTopbarText": string;
        "sendButtonText": string;
        "successMessage": string;
    }
    interface FeedbackModal {
        "emailAddress": string;
        "emailPlaceholder": string;
        "errorMessage": string;
        "errorMessage403": string;
        "errorMessage404": string;
        "fetchData": boolean;
        "hasSelectedElement": boolean;
        "hideEmail": boolean;
        "hidePrivacyPolicy": boolean;
        "hideRating": boolean;
        "hideScreenshotButton": boolean;
        "messagePlaceholder": string;
        "modalPosition": string;
        "modalTitle": string;
        "modalTitleError": string;
        "modalTitleSuccess": string;
        "privacyPolicyText": string;
        "project": string;
        "ratingMode": string;
        "ratingPlaceholder": string;
        "ratingStarsPlaceholder": string;
        "screenshotButtonText": string;
        "screenshotTopbarText": string;
        "sendButtonText": string;
        "showModal": boolean;
        "showScreenshotMode": boolean;
        "showScreenshotTopBar": boolean;
        "successMessage": string;
    }
}
declare global {
    interface HTMLFeedbackButtonElement extends Components.FeedbackButton, HTMLStencilElement {
    }
    var HTMLFeedbackButtonElement: {
        prototype: HTMLFeedbackButtonElement;
        new (): HTMLFeedbackButtonElement;
    };
    interface HTMLFeedbackModalElement extends Components.FeedbackModal, HTMLStencilElement {
    }
    var HTMLFeedbackModalElement: {
        prototype: HTMLFeedbackModalElement;
        new (): HTMLFeedbackModalElement;
    };
    interface HTMLElementTagNameMap {
        "feedback-button": HTMLFeedbackButtonElement;
        "feedback-modal": HTMLFeedbackModalElement;
    }
}
declare namespace LocalJSX {
    interface FeedbackButton {
        "buttonPosition"?: string;
        "buttonStyle"?: string;
        "customFont"?: boolean;
        "emailAddress"?: string;
        "emailPlaceholder"?: string;
        "errorMessage"?: string;
        "errorMessage403"?: string;
        "errorMessage404"?: string;
        "fetchData"?: boolean;
        "hideEmail"?: boolean;
        "hideIcon"?: boolean;
        "hidePrivacyPolicy"?: boolean;
        "hideRating"?: boolean;
        "hideScreenshotButton"?: boolean;
        "messagePlaceholder"?: string;
        "modalPosition"?: string;
        "modalTitle"?: string;
        "modalTitleError"?: string;
        "modalTitleSuccess"?: string;
        "privacyPolicyText"?: string;
        "project"?: string;
        "ratingMode"?: string;
        "ratingPlaceholder"?: string;
        "ratingStarsPlaceholder"?: string;
        "screenshotButtonText"?: string;
        "screenshotTopbarText"?: string;
        "sendButtonText"?: string;
        "successMessage"?: string;
    }
    interface FeedbackModal {
        "emailAddress"?: string;
        "emailPlaceholder"?: string;
        "errorMessage"?: string;
        "errorMessage403"?: string;
        "errorMessage404"?: string;
        "fetchData"?: boolean;
        "hasSelectedElement"?: boolean;
        "hideEmail"?: boolean;
        "hidePrivacyPolicy"?: boolean;
        "hideRating"?: boolean;
        "hideScreenshotButton"?: boolean;
        "messagePlaceholder"?: string;
        "modalPosition"?: string;
        "modalTitle"?: string;
        "modalTitleError"?: string;
        "modalTitleSuccess"?: string;
        "privacyPolicyText"?: string;
        "project"?: string;
        "ratingMode"?: string;
        "ratingPlaceholder"?: string;
        "ratingStarsPlaceholder"?: string;
        "screenshotButtonText"?: string;
        "screenshotTopbarText"?: string;
        "sendButtonText"?: string;
        "showModal"?: boolean;
        "showScreenshotMode"?: boolean;
        "showScreenshotTopBar"?: boolean;
        "successMessage"?: string;
    }
    interface IntrinsicElements {
        "feedback-button": FeedbackButton;
        "feedback-modal": FeedbackModal;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "feedback-button": LocalJSX.FeedbackButton & JSXBase.HTMLAttributes<HTMLFeedbackButtonElement>;
            "feedback-modal": LocalJSX.FeedbackModal & JSXBase.HTMLAttributes<HTMLFeedbackModalElement>;
        }
    }
}
